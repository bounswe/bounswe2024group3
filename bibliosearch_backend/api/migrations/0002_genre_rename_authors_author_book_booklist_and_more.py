# Generated by Django 5.0.4 on 2024-04-27 13:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.RenameModel(
            old_name='Authors',
            new_name='Author',
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('cover_url', models.URLField()),
                ('isbn', models.CharField(max_length=13)),
                ('description', models.TextField()),
                ('publication_date', models.DateField()),
                ('page_count', models.IntegerField()),
                ('authors', models.ManyToManyField(to='api.author')),
                ('genres', models.ManyToManyField(to='api.genre')),
            ],
        ),
        migrations.CreateModel(
            name='BookList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('books', models.ManyToManyField(blank=True, to='api.book')),
            ],
        ),
        migrations.CreateModel(
            name='BiblioSearchUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fav_authors', models.ManyToManyField(blank=True, to='api.author')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book_lists', models.ManyToManyField(blank=True, to='api.booklist')),
                ('fav_genres', models.ManyToManyField(blank=True, to='api.genre')),
            ],
        ),
    ]
